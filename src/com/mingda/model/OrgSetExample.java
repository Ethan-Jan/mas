package com.mingda.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrgSetExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    public OrgSetExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    protected OrgSetExample(OrgSetExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.ORG_SET
     *
     * @ibatorgenerated Mon Nov 23 09:42:36 CST 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andOrganizationIdIsNull() {
            addCriterion("ORGANIZATION_ID is null");
            return this;
        }

        public Criteria andOrganizationIdIsNotNull() {
            addCriterion("ORGANIZATION_ID is not null");
            return this;
        }

        public Criteria andOrganizationIdEqualTo(String value) {
            addCriterion("ORGANIZATION_ID =", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotEqualTo(String value) {
            addCriterion("ORGANIZATION_ID <>", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdGreaterThan(String value) {
            addCriterion("ORGANIZATION_ID >", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdGreaterThanOrEqualTo(String value) {
            addCriterion("ORGANIZATION_ID >=", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLessThan(String value) {
            addCriterion("ORGANIZATION_ID <", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLessThanOrEqualTo(String value) {
            addCriterion("ORGANIZATION_ID <=", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLike(String value) {
            addCriterion("ORGANIZATION_ID like", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotLike(String value) {
            addCriterion("ORGANIZATION_ID not like", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdIn(List<String> values) {
            addCriterion("ORGANIZATION_ID in", values, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotIn(List<String> values) {
            addCriterion("ORGANIZATION_ID not in", values, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdBetween(String value1, String value2) {
            addCriterion("ORGANIZATION_ID between", value1, value2, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotBetween(String value1, String value2) {
            addCriterion("ORGANIZATION_ID not between", value1, value2, "organizationId");
            return this;
        }

        public Criteria andSpecSetIsNull() {
            addCriterion("SPEC_SET is null");
            return this;
        }

        public Criteria andSpecSetIsNotNull() {
            addCriterion("SPEC_SET is not null");
            return this;
        }

        public Criteria andSpecSetEqualTo(String value) {
            addCriterion("SPEC_SET =", value, "specSet");
            return this;
        }

        public Criteria andSpecSetNotEqualTo(String value) {
            addCriterion("SPEC_SET <>", value, "specSet");
            return this;
        }

        public Criteria andSpecSetGreaterThan(String value) {
            addCriterion("SPEC_SET >", value, "specSet");
            return this;
        }

        public Criteria andSpecSetGreaterThanOrEqualTo(String value) {
            addCriterion("SPEC_SET >=", value, "specSet");
            return this;
        }

        public Criteria andSpecSetLessThan(String value) {
            addCriterion("SPEC_SET <", value, "specSet");
            return this;
        }

        public Criteria andSpecSetLessThanOrEqualTo(String value) {
            addCriterion("SPEC_SET <=", value, "specSet");
            return this;
        }

        public Criteria andSpecSetLike(String value) {
            addCriterion("SPEC_SET like", value, "specSet");
            return this;
        }

        public Criteria andSpecSetNotLike(String value) {
            addCriterion("SPEC_SET not like", value, "specSet");
            return this;
        }

        public Criteria andSpecSetIn(List<String> values) {
            addCriterion("SPEC_SET in", values, "specSet");
            return this;
        }

        public Criteria andSpecSetNotIn(List<String> values) {
            addCriterion("SPEC_SET not in", values, "specSet");
            return this;
        }

        public Criteria andSpecSetBetween(String value1, String value2) {
            addCriterion("SPEC_SET between", value1, value2, "specSet");
            return this;
        }

        public Criteria andSpecSetNotBetween(String value1, String value2) {
            addCriterion("SPEC_SET not between", value1, value2, "specSet");
            return this;
        }

        public Criteria andAreaSetIsNull() {
            addCriterion("AREA_SET is null");
            return this;
        }

        public Criteria andAreaSetIsNotNull() {
            addCriterion("AREA_SET is not null");
            return this;
        }

        public Criteria andAreaSetEqualTo(String value) {
            addCriterion("AREA_SET =", value, "areaSet");
            return this;
        }

        public Criteria andAreaSetNotEqualTo(String value) {
            addCriterion("AREA_SET <>", value, "areaSet");
            return this;
        }

        public Criteria andAreaSetGreaterThan(String value) {
            addCriterion("AREA_SET >", value, "areaSet");
            return this;
        }

        public Criteria andAreaSetGreaterThanOrEqualTo(String value) {
            addCriterion("AREA_SET >=", value, "areaSet");
            return this;
        }

        public Criteria andAreaSetLessThan(String value) {
            addCriterion("AREA_SET <", value, "areaSet");
            return this;
        }

        public Criteria andAreaSetLessThanOrEqualTo(String value) {
            addCriterion("AREA_SET <=", value, "areaSet");
            return this;
        }

        public Criteria andAreaSetLike(String value) {
            addCriterion("AREA_SET like", value, "areaSet");
            return this;
        }

        public Criteria andAreaSetNotLike(String value) {
            addCriterion("AREA_SET not like", value, "areaSet");
            return this;
        }

        public Criteria andAreaSetIn(List<String> values) {
            addCriterion("AREA_SET in", values, "areaSet");
            return this;
        }

        public Criteria andAreaSetNotIn(List<String> values) {
            addCriterion("AREA_SET not in", values, "areaSet");
            return this;
        }

        public Criteria andAreaSetBetween(String value1, String value2) {
            addCriterion("AREA_SET between", value1, value2, "areaSet");
            return this;
        }

        public Criteria andAreaSetNotBetween(String value1, String value2) {
            addCriterion("AREA_SET not between", value1, value2, "areaSet");
            return this;
        }

        public Criteria andSpecScopeIsNull() {
            addCriterion("SPEC_SCOPE is null");
            return this;
        }

        public Criteria andSpecScopeIsNotNull() {
            addCriterion("SPEC_SCOPE is not null");
            return this;
        }

        public Criteria andSpecScopeEqualTo(String value) {
            addCriterion("SPEC_SCOPE =", value, "specScope");
            return this;
        }

        public Criteria andSpecScopeNotEqualTo(String value) {
            addCriterion("SPEC_SCOPE <>", value, "specScope");
            return this;
        }

        public Criteria andSpecScopeGreaterThan(String value) {
            addCriterion("SPEC_SCOPE >", value, "specScope");
            return this;
        }

        public Criteria andSpecScopeGreaterThanOrEqualTo(String value) {
            addCriterion("SPEC_SCOPE >=", value, "specScope");
            return this;
        }

        public Criteria andSpecScopeLessThan(String value) {
            addCriterion("SPEC_SCOPE <", value, "specScope");
            return this;
        }

        public Criteria andSpecScopeLessThanOrEqualTo(String value) {
            addCriterion("SPEC_SCOPE <=", value, "specScope");
            return this;
        }

        public Criteria andSpecScopeLike(String value) {
            addCriterion("SPEC_SCOPE like", value, "specScope");
            return this;
        }

        public Criteria andSpecScopeNotLike(String value) {
            addCriterion("SPEC_SCOPE not like", value, "specScope");
            return this;
        }

        public Criteria andSpecScopeIn(List<String> values) {
            addCriterion("SPEC_SCOPE in", values, "specScope");
            return this;
        }

        public Criteria andSpecScopeNotIn(List<String> values) {
            addCriterion("SPEC_SCOPE not in", values, "specScope");
            return this;
        }

        public Criteria andSpecScopeBetween(String value1, String value2) {
            addCriterion("SPEC_SCOPE between", value1, value2, "specScope");
            return this;
        }

        public Criteria andSpecScopeNotBetween(String value1, String value2) {
            addCriterion("SPEC_SCOPE not between", value1, value2, "specScope");
            return this;
        }

        public Criteria andDbbxYbMzIsNull() {
            addCriterion("DBBX_YB_MZ is null");
            return this;
        }

        public Criteria andDbbxYbMzIsNotNull() {
            addCriterion("DBBX_YB_MZ is not null");
            return this;
        }

        public Criteria andDbbxYbMzEqualTo(String value) {
            addCriterion("DBBX_YB_MZ =", value, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzNotEqualTo(String value) {
            addCriterion("DBBX_YB_MZ <>", value, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzGreaterThan(String value) {
            addCriterion("DBBX_YB_MZ >", value, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzGreaterThanOrEqualTo(String value) {
            addCriterion("DBBX_YB_MZ >=", value, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzLessThan(String value) {
            addCriterion("DBBX_YB_MZ <", value, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzLessThanOrEqualTo(String value) {
            addCriterion("DBBX_YB_MZ <=", value, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzLike(String value) {
            addCriterion("DBBX_YB_MZ like", value, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzNotLike(String value) {
            addCriterion("DBBX_YB_MZ not like", value, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzIn(List<String> values) {
            addCriterion("DBBX_YB_MZ in", values, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzNotIn(List<String> values) {
            addCriterion("DBBX_YB_MZ not in", values, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzBetween(String value1, String value2) {
            addCriterion("DBBX_YB_MZ between", value1, value2, "dbbxYbMz");
            return this;
        }

        public Criteria andDbbxYbMzNotBetween(String value1, String value2) {
            addCriterion("DBBX_YB_MZ not between", value1, value2, "dbbxYbMz");
            return this;
        }
    }
}