package com.mingda.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class JzMedicalafterBillExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    public JzMedicalafterBillExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    protected JzMedicalafterBillExample(JzMedicalafterBillExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.JZ_MEDICALAFTER_BILL
     *
     * @ibatorgenerated Wed Dec 31 10:21:28 CST 2014
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andBillIdIsNull() {
            addCriterion("BILL_ID is null");
            return this;
        }

        public Criteria andBillIdIsNotNull() {
            addCriterion("BILL_ID is not null");
            return this;
        }

        public Criteria andBillIdEqualTo(String value) {
            addCriterion("BILL_ID =", value, "billId");
            return this;
        }

        public Criteria andBillIdNotEqualTo(String value) {
            addCriterion("BILL_ID <>", value, "billId");
            return this;
        }

        public Criteria andBillIdGreaterThan(String value) {
            addCriterion("BILL_ID >", value, "billId");
            return this;
        }

        public Criteria andBillIdGreaterThanOrEqualTo(String value) {
            addCriterion("BILL_ID >=", value, "billId");
            return this;
        }

        public Criteria andBillIdLessThan(String value) {
            addCriterion("BILL_ID <", value, "billId");
            return this;
        }

        public Criteria andBillIdLessThanOrEqualTo(String value) {
            addCriterion("BILL_ID <=", value, "billId");
            return this;
        }

        public Criteria andBillIdLike(String value) {
            addCriterion("BILL_ID like", value, "billId");
            return this;
        }

        public Criteria andBillIdNotLike(String value) {
            addCriterion("BILL_ID not like", value, "billId");
            return this;
        }

        public Criteria andBillIdIn(List<String> values) {
            addCriterion("BILL_ID in", values, "billId");
            return this;
        }

        public Criteria andBillIdNotIn(List<String> values) {
            addCriterion("BILL_ID not in", values, "billId");
            return this;
        }

        public Criteria andBillIdBetween(String value1, String value2) {
            addCriterion("BILL_ID between", value1, value2, "billId");
            return this;
        }

        public Criteria andBillIdNotBetween(String value1, String value2) {
            addCriterion("BILL_ID not between", value1, value2, "billId");
            return this;
        }

        public Criteria andBizIdIsNull() {
            addCriterion("BIZ_ID is null");
            return this;
        }

        public Criteria andBizIdIsNotNull() {
            addCriterion("BIZ_ID is not null");
            return this;
        }

        public Criteria andBizIdEqualTo(Integer value) {
            addCriterion("BIZ_ID =", value, "bizId");
            return this;
        }

        public Criteria andBizIdNotEqualTo(Integer value) {
            addCriterion("BIZ_ID <>", value, "bizId");
            return this;
        }

        public Criteria andBizIdGreaterThan(Integer value) {
            addCriterion("BIZ_ID >", value, "bizId");
            return this;
        }

        public Criteria andBizIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("BIZ_ID >=", value, "bizId");
            return this;
        }

        public Criteria andBizIdLessThan(Integer value) {
            addCriterion("BIZ_ID <", value, "bizId");
            return this;
        }

        public Criteria andBizIdLessThanOrEqualTo(Integer value) {
            addCriterion("BIZ_ID <=", value, "bizId");
            return this;
        }

        public Criteria andBizIdIn(List<Integer> values) {
            addCriterion("BIZ_ID in", values, "bizId");
            return this;
        }

        public Criteria andBizIdNotIn(List<Integer> values) {
            addCriterion("BIZ_ID not in", values, "bizId");
            return this;
        }

        public Criteria andBizIdBetween(Integer value1, Integer value2) {
            addCriterion("BIZ_ID between", value1, value2, "bizId");
            return this;
        }

        public Criteria andBizIdNotBetween(Integer value1, Integer value2) {
            addCriterion("BIZ_ID not between", value1, value2, "bizId");
            return this;
        }

        public Criteria andPrintTimeIsNull() {
            addCriterion("PRINT_TIME is null");
            return this;
        }

        public Criteria andPrintTimeIsNotNull() {
            addCriterion("PRINT_TIME is not null");
            return this;
        }

        public Criteria andPrintTimeEqualTo(Date value) {
            addCriterion("PRINT_TIME =", value, "printTime");
            return this;
        }

        public Criteria andPrintTimeNotEqualTo(Date value) {
            addCriterion("PRINT_TIME <>", value, "printTime");
            return this;
        }

        public Criteria andPrintTimeGreaterThan(Date value) {
            addCriterion("PRINT_TIME >", value, "printTime");
            return this;
        }

        public Criteria andPrintTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("PRINT_TIME >=", value, "printTime");
            return this;
        }

        public Criteria andPrintTimeLessThan(Date value) {
            addCriterion("PRINT_TIME <", value, "printTime");
            return this;
        }

        public Criteria andPrintTimeLessThanOrEqualTo(Date value) {
            addCriterion("PRINT_TIME <=", value, "printTime");
            return this;
        }

        public Criteria andPrintTimeIn(List<Date> values) {
            addCriterion("PRINT_TIME in", values, "printTime");
            return this;
        }

        public Criteria andPrintTimeNotIn(List<Date> values) {
            addCriterion("PRINT_TIME not in", values, "printTime");
            return this;
        }

        public Criteria andPrintTimeBetween(Date value1, Date value2) {
            addCriterion("PRINT_TIME between", value1, value2, "printTime");
            return this;
        }

        public Criteria andPrintTimeNotBetween(Date value1, Date value2) {
            addCriterion("PRINT_TIME not between", value1, value2, "printTime");
            return this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("USER_ID =", value, "userId");
            return this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("USER_ID <>", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("USER_ID >", value, "userId");
            return this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("USER_ID >=", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("USER_ID <", value, "userId");
            return this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("USER_ID <=", value, "userId");
            return this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("USER_ID in", values, "userId");
            return this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("USER_ID not in", values, "userId");
            return this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return this;
        }

        public Criteria andStsIsNull() {
            addCriterion("STS is null");
            return this;
        }

        public Criteria andStsIsNotNull() {
            addCriterion("STS is not null");
            return this;
        }

        public Criteria andStsEqualTo(String value) {
            addCriterion("STS =", value, "sts");
            return this;
        }

        public Criteria andStsNotEqualTo(String value) {
            addCriterion("STS <>", value, "sts");
            return this;
        }

        public Criteria andStsGreaterThan(String value) {
            addCriterion("STS >", value, "sts");
            return this;
        }

        public Criteria andStsGreaterThanOrEqualTo(String value) {
            addCriterion("STS >=", value, "sts");
            return this;
        }

        public Criteria andStsLessThan(String value) {
            addCriterion("STS <", value, "sts");
            return this;
        }

        public Criteria andStsLessThanOrEqualTo(String value) {
            addCriterion("STS <=", value, "sts");
            return this;
        }

        public Criteria andStsLike(String value) {
            addCriterion("STS like", value, "sts");
            return this;
        }

        public Criteria andStsNotLike(String value) {
            addCriterion("STS not like", value, "sts");
            return this;
        }

        public Criteria andStsIn(List<String> values) {
            addCriterion("STS in", values, "sts");
            return this;
        }

        public Criteria andStsNotIn(List<String> values) {
            addCriterion("STS not in", values, "sts");
            return this;
        }

        public Criteria andStsBetween(String value1, String value2) {
            addCriterion("STS between", value1, value2, "sts");
            return this;
        }

        public Criteria andStsNotBetween(String value1, String value2) {
            addCriterion("STS not between", value1, value2, "sts");
            return this;
        }
    }
}