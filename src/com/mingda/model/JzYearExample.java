package com.mingda.model;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class JzYearExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    public JzYearExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    protected JzYearExample(JzYearExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table MEDICAL.JZ_YEAR
     *
     * @ibatorgenerated Sat Jan 10 15:40:04 CST 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andYIdIsNull() {
            addCriterion("Y_ID is null");
            return this;
        }

        public Criteria andYIdIsNotNull() {
            addCriterion("Y_ID is not null");
            return this;
        }

        public Criteria andYIdEqualTo(Integer value) {
            addCriterion("Y_ID =", value, "yId");
            return this;
        }

        public Criteria andYIdNotEqualTo(Integer value) {
            addCriterion("Y_ID <>", value, "yId");
            return this;
        }

        public Criteria andYIdGreaterThan(Integer value) {
            addCriterion("Y_ID >", value, "yId");
            return this;
        }

        public Criteria andYIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Y_ID >=", value, "yId");
            return this;
        }

        public Criteria andYIdLessThan(Integer value) {
            addCriterion("Y_ID <", value, "yId");
            return this;
        }

        public Criteria andYIdLessThanOrEqualTo(Integer value) {
            addCriterion("Y_ID <=", value, "yId");
            return this;
        }

        public Criteria andYIdIn(List<Integer> values) {
            addCriterion("Y_ID in", values, "yId");
            return this;
        }

        public Criteria andYIdNotIn(List<Integer> values) {
            addCriterion("Y_ID not in", values, "yId");
            return this;
        }

        public Criteria andYIdBetween(Integer value1, Integer value2) {
            addCriterion("Y_ID between", value1, value2, "yId");
            return this;
        }

        public Criteria andYIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Y_ID not between", value1, value2, "yId");
            return this;
        }

        public Criteria andOrganizationIdIsNull() {
            addCriterion("ORGANIZATION_ID is null");
            return this;
        }

        public Criteria andOrganizationIdIsNotNull() {
            addCriterion("ORGANIZATION_ID is not null");
            return this;
        }

        public Criteria andOrganizationIdEqualTo(String value) {
            addCriterion("ORGANIZATION_ID =", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotEqualTo(String value) {
            addCriterion("ORGANIZATION_ID <>", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdGreaterThan(String value) {
            addCriterion("ORGANIZATION_ID >", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdGreaterThanOrEqualTo(String value) {
            addCriterion("ORGANIZATION_ID >=", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLessThan(String value) {
            addCriterion("ORGANIZATION_ID <", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLessThanOrEqualTo(String value) {
            addCriterion("ORGANIZATION_ID <=", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdLike(String value) {
            addCriterion("ORGANIZATION_ID like", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotLike(String value) {
            addCriterion("ORGANIZATION_ID not like", value, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdIn(List<String> values) {
            addCriterion("ORGANIZATION_ID in", values, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotIn(List<String> values) {
            addCriterion("ORGANIZATION_ID not in", values, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdBetween(String value1, String value2) {
            addCriterion("ORGANIZATION_ID between", value1, value2, "organizationId");
            return this;
        }

        public Criteria andOrganizationIdNotBetween(String value1, String value2) {
            addCriterion("ORGANIZATION_ID not between", value1, value2, "organizationId");
            return this;
        }

        public Criteria andBusinessMonthIsNull() {
            addCriterion("BUSINESS_MONTH is null");
            return this;
        }

        public Criteria andBusinessMonthIsNotNull() {
            addCriterion("BUSINESS_MONTH is not null");
            return this;
        }

        public Criteria andBusinessMonthEqualTo(String value) {
            addCriterion("BUSINESS_MONTH =", value, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthNotEqualTo(String value) {
            addCriterion("BUSINESS_MONTH <>", value, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthGreaterThan(String value) {
            addCriterion("BUSINESS_MONTH >", value, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthGreaterThanOrEqualTo(String value) {
            addCriterion("BUSINESS_MONTH >=", value, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthLessThan(String value) {
            addCriterion("BUSINESS_MONTH <", value, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthLessThanOrEqualTo(String value) {
            addCriterion("BUSINESS_MONTH <=", value, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthLike(String value) {
            addCriterion("BUSINESS_MONTH like", value, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthNotLike(String value) {
            addCriterion("BUSINESS_MONTH not like", value, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthIn(List<String> values) {
            addCriterion("BUSINESS_MONTH in", values, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthNotIn(List<String> values) {
            addCriterion("BUSINESS_MONTH not in", values, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthBetween(String value1, String value2) {
            addCriterion("BUSINESS_MONTH between", value1, value2, "businessMonth");
            return this;
        }

        public Criteria andBusinessMonthNotBetween(String value1, String value2) {
            addCriterion("BUSINESS_MONTH not between", value1, value2, "businessMonth");
            return this;
        }

        public Criteria andBusinessDateIsNull() {
            addCriterion("BUSINESS_DATE is null");
            return this;
        }

        public Criteria andBusinessDateIsNotNull() {
            addCriterion("BUSINESS_DATE is not null");
            return this;
        }

        public Criteria andBusinessDateEqualTo(String value) {
            addCriterion("BUSINESS_DATE =", value, "businessDate");
            return this;
        }

        public Criteria andBusinessDateNotEqualTo(String value) {
            addCriterion("BUSINESS_DATE <>", value, "businessDate");
            return this;
        }

        public Criteria andBusinessDateGreaterThan(String value) {
            addCriterion("BUSINESS_DATE >", value, "businessDate");
            return this;
        }

        public Criteria andBusinessDateGreaterThanOrEqualTo(String value) {
            addCriterion("BUSINESS_DATE >=", value, "businessDate");
            return this;
        }

        public Criteria andBusinessDateLessThan(String value) {
            addCriterion("BUSINESS_DATE <", value, "businessDate");
            return this;
        }

        public Criteria andBusinessDateLessThanOrEqualTo(String value) {
            addCriterion("BUSINESS_DATE <=", value, "businessDate");
            return this;
        }

        public Criteria andBusinessDateLike(String value) {
            addCriterion("BUSINESS_DATE like", value, "businessDate");
            return this;
        }

        public Criteria andBusinessDateNotLike(String value) {
            addCriterion("BUSINESS_DATE not like", value, "businessDate");
            return this;
        }

        public Criteria andBusinessDateIn(List<String> values) {
            addCriterion("BUSINESS_DATE in", values, "businessDate");
            return this;
        }

        public Criteria andBusinessDateNotIn(List<String> values) {
            addCriterion("BUSINESS_DATE not in", values, "businessDate");
            return this;
        }

        public Criteria andBusinessDateBetween(String value1, String value2) {
            addCriterion("BUSINESS_DATE between", value1, value2, "businessDate");
            return this;
        }

        public Criteria andBusinessDateNotBetween(String value1, String value2) {
            addCriterion("BUSINESS_DATE not between", value1, value2, "businessDate");
            return this;
        }

        public Criteria andParameterIsNull() {
            addCriterion("PARAMETER is null");
            return this;
        }

        public Criteria andParameterIsNotNull() {
            addCriterion("PARAMETER is not null");
            return this;
        }

        public Criteria andParameterEqualTo(Short value) {
            addCriterion("PARAMETER =", value, "parameter");
            return this;
        }

        public Criteria andParameterNotEqualTo(Short value) {
            addCriterion("PARAMETER <>", value, "parameter");
            return this;
        }

        public Criteria andParameterGreaterThan(Short value) {
            addCriterion("PARAMETER >", value, "parameter");
            return this;
        }

        public Criteria andParameterGreaterThanOrEqualTo(Short value) {
            addCriterion("PARAMETER >=", value, "parameter");
            return this;
        }

        public Criteria andParameterLessThan(Short value) {
            addCriterion("PARAMETER <", value, "parameter");
            return this;
        }

        public Criteria andParameterLessThanOrEqualTo(Short value) {
            addCriterion("PARAMETER <=", value, "parameter");
            return this;
        }

        public Criteria andParameterIn(List<Short> values) {
            addCriterion("PARAMETER in", values, "parameter");
            return this;
        }

        public Criteria andParameterNotIn(List<Short> values) {
            addCriterion("PARAMETER not in", values, "parameter");
            return this;
        }

        public Criteria andParameterBetween(Short value1, Short value2) {
            addCriterion("PARAMETER between", value1, value2, "parameter");
            return this;
        }

        public Criteria andParameterNotBetween(Short value1, Short value2) {
            addCriterion("PARAMETER not between", value1, value2, "parameter");
            return this;
        }

        public Criteria andStsIsNull() {
            addCriterion("STS is null");
            return this;
        }

        public Criteria andStsIsNotNull() {
            addCriterion("STS is not null");
            return this;
        }

        public Criteria andStsEqualTo(String value) {
            addCriterion("STS =", value, "sts");
            return this;
        }

        public Criteria andStsNotEqualTo(String value) {
            addCriterion("STS <>", value, "sts");
            return this;
        }

        public Criteria andStsGreaterThan(String value) {
            addCriterion("STS >", value, "sts");
            return this;
        }

        public Criteria andStsGreaterThanOrEqualTo(String value) {
            addCriterion("STS >=", value, "sts");
            return this;
        }

        public Criteria andStsLessThan(String value) {
            addCriterion("STS <", value, "sts");
            return this;
        }

        public Criteria andStsLessThanOrEqualTo(String value) {
            addCriterion("STS <=", value, "sts");
            return this;
        }

        public Criteria andStsLike(String value) {
            addCriterion("STS like", value, "sts");
            return this;
        }

        public Criteria andStsNotLike(String value) {
            addCriterion("STS not like", value, "sts");
            return this;
        }

        public Criteria andStsIn(List<String> values) {
            addCriterion("STS in", values, "sts");
            return this;
        }

        public Criteria andStsNotIn(List<String> values) {
            addCriterion("STS not in", values, "sts");
            return this;
        }

        public Criteria andStsBetween(String value1, String value2) {
            addCriterion("STS between", value1, value2, "sts");
            return this;
        }

        public Criteria andStsNotBetween(String value1, String value2) {
            addCriterion("STS not between", value1, value2, "sts");
            return this;
        }
    }
}